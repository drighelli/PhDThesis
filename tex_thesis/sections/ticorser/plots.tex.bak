During \gls{rnaseq} data analysis, it is almost mandatory to explore the data during each step of the analysis.
This is relevant to understand which is the best method to apply at each analysis step and to be more confident with produced results. 

At this scope, we equipped \gls{tic} of several useful graphics and plots to be used at each analysis step.
Each of them, except when otherwise declared, with aid of \textit{plotly} library, enables to convert the plot in an interactive \gls{html} plot, useful to inspect additional attributes using the mouse pointer.

\subsubsection{Exploration Plots on Counts}
As already mentioned (see section \ref{sec:ticorsernormalization}), the normalization phase critically affects the final results in terms of \glspl{deg} detected.
That's why it is always a good norm to understand how the applied transformations are influencing the features quantification. 
To address this need we implemented two plots, the Boxplot and the \gls{pca}.

The boxplot is a graphical representation of the distribution of the samples. 
Our boxplot is organized in group colours accordingly to the time-point each sample belongs to (figure \ref{fig:ticorserboxplot}).

\begin{figure}[H]
\centering
\includegraphics[width=10cm, keepaspectratio]{img/ticorser/boxplot_example.png}
\caption[ticorser boxplot]{An example of interactive boxplot made with \gls{tic} package. Each box represents a specific sample, while each colour represents a specific time point. When passing the mouse over a boxplot it shows additional information about its quartiles and outliers.}
\label{fig:ticorserboxplot}
\end{figure}

Each box is divided into two main parts, with an outgoing segment from each side. 
The horizontal upper and lower lines of the box represent the first and third quartile, while the middle horizontal rule represents the median.
The upper and lower part of the segments, in case of absence of outliers, represent the minimum and maximum values of the sample distribution.

Our \lstinline!plotBoxplotPlotly! function is based on the design matrix, describing the data counts, which gives the possibility to select the column to use for colouring the samples thanks to the \lstinline!colorColname! parameter. 

\begin{figure}[H]
\centering
\includegraphics[width=10cm, keepaspectratio]{img/ticorser/pca_example.png}
\caption[ticorser pca]{An example of interactive \gls{pca} made with \gls{tic} package. Each dot represents a specific sample, while each colour represents a time point, each symbol represents a biological condition group. When passing the mouse over a dot it shows additional information about the selected sample, while from the legend it's possible to show/hide groups or ellipses.}
\label{fig:ticorserpca}
\end{figure}

Due to the very high dimensionality of \gls{rnaseq} data, it is widely considered common sense to apply \gls{pca} dimensionality reduction technique to visualize the data, limiting their representation to 2 or 3 dimensions.
There are several packages allowing to apply a \gls{pca} transformation, but we choose to implement it in the \lstinline!PlotPCAPlotlyFunction! function, by using the \lstinline!prcomp! from the \textit{stats} package.

\begin{figure}[H]
\centering
\includegraphics[width=10cm, keepaspectratio]{img/ticorser/pcas.png}
\caption[ticorser pca]{An example of interactive matrix \gls{pca} made with \gls{tic} package. Each plot puts in relation two different Principal Components. While each dot represents a specific sample, while each colour represents a time point, each symbol represents a biological condition group. When passing the mouse over a dot it shows additional information about the selected sample, while from the legend it's possible to show/hide groups or ellipses.}
\label{fig:ticorserpcas}
\end{figure}

The user just needs to give the \lstinline!counts.data.frame! and the \lstinline!design.data.frame! by specifying the column name where to find the samples groups.
In such a way, the function will compute and plot the \gls{pca}, colouring the samples according to the groups identified by the chosen column.
It is also possible to specify the \glspl{pc} to plot with \lstinline!xPCA! and \lstinline!yPCA!, where x and y indicate respectively the x-axis and y-axis.
Moreover, by setting the \lstinline!ellipse.flag! argument to \lstinline!TRUE!  the function will show the ellipses surrounding each sample group, each one describing the variance of the groups.

In order to plot more than one \glspl{pc}, \gls{tic} allows to plot more than one component at the same time (figure \ref{fig:ticorserpcas}).
By using the \lstinline!plotPCAMatrixPlotly! function it's possible to compare more than two \glspl{pc} at the same time, simply by using the \lstinline!pc.list! argument.




\subsubsection{DE Results Plots}
In order to inspect the results produced by DE methods, we implemented two kind of plots, the \textit{VolcanoPlot} and the \textit{MA-Plot}.

Both our implemented methods take as input a DE results data frame, automatically recognizing which method produced it, in order to speed up the user cares during the analysis.
Moreover, it gives the possibility to add a list of positive control genes, in order to annotate them on the plot with a third colour (figure \ref{fig:ticorservolcano}).

The volcano plot shows the relation of $log_2(FC)$ with $log_{10}(p-value)$ of each gene, in order to highlight the significant changes inside the data experiment.

\begin{figure}[H]
\centering
\includegraphics[width=10cm, keepaspectratio]{img/ticorser/volcano_example.png}
\caption[ticorser volcano]{An example of interactive volcano plot made with \gls{tic} package. Each dot represents a gene, while blue and red colours highlight the significance of the genes. In green, there are those genes coming from the positive control list. When passing the mouse over a dot it shows additional information about the selected gene.}
\label{fig:ticorservolcano}
\end{figure}

The MA-Plot shows the relation between  two quantities useful to understand the differences between the measurements in two conditions.
Indeed, on the x-axis, there is represented the $log_2(FC)$, where \textit{FC} is the fold change computed as the ratio of the treatment on the reference control.
It is not mandatory to have a DE-results dataframe to plot an MA-plot, but it's pretty useful to have it in order to highlight the distribution of the significant genes (figure \ref{fig:ticorsermaplot}).
 
\begin{figure}[H]
\centering
\includegraphics[width=10cm,keepaspectratio]{img/ticorser/maplot.pdf}
\caption[ticorser MAplot]{An example of interactive MA-plot made with \gls{tic} package. Each dot represents a gene, while blue and red colours highlights the significance of the genes. When passing the mouse over a dot it shows additional information about the selected gene.}
\label{fig:ticorsermaplot}
\end{figure}


\subsubsection{Gene Profiles plot}
When working with time course data experiment, it is really useful to understand the trend of one or more genes across all the time points and the relation between the conditions.

In order to highlight the expression of a gene across multiple time points and different conditions, we implemented the \lstinline!plotGeneProfile! function, which takes as input a count matrix, its related design matrix and a gene name (figure \ref{fig:ticorsertrends}).

\begin{figure}[H]
\centering
\includegraphics[width=10cm, keepaspectratio]{img/ticorser/gene_trend.png}
\caption[ticorser gene profile]{An example of interactive gene profile made with \gls{tic} package. Each dot represents the counts value of the gene in a sample. Colours identifies the conditions of the samples. The lines represent the gene trend over all time points.}
\label{fig:ticorsergenetrend}
\end{figure}


\subsubsection{KEGG-Maps}
Once detected the \glspl{deg}, it is really important to inspect for functional mechanisms regulated by up and down-regulated genes. 

\Gls{tic} offers the possibility to plot \textit{keggmaps} \cite{Kanehisa2016} taking into account the $log_2(FC)$ of the genes involved in the graphical representation, through all the time points.
Indeed, using the \lstinline!plotKeggmap! function, the software enables to plot a keggmap, using as input the counts and the design matrix, computing the $log_2(FC)$ at each time point, and showing it in the gene box inside the \textit{KEGG} map.
The color legend in the upper part of the figure indicates color associated to the up and down regulated genes.

\begin{figure}[H]
\includegraphics[width=12cm, keepaspectratio]{img/ticorser/keggmap_example.png}
\caption[ticorser keggmap]{A KEGG-map representation for the \textit{Calcium Signaling pathway}. The contributing genes are represented in boxes. Arrows represent the effect of each gene on others. The coloured genes tipically come from a differential expression experiment, showing the expression in log Fold Change.}
\label{fig:ticorserkeggmap}
\centering
\end{figure}








