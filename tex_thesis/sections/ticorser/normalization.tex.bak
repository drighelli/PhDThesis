Also for the normalization process \gls{tic} offers several ways to normalize the data.

Thanks to the \lstinline!normalizeData! function we are able to offer five different normalization methods without taking care of additional information.
The design matrix based system allows to subset the data only to the relevant factors the user want to normalize.

The function offers the possibility to normalize the data with \textit{Full quantile}, \textit{Upper quartile} and \textit{Trimmed Mean of M-values}, setting the \lstinline!norm.type! parameter to \textit{fqua}, \textit{uqua} or \textit{tmm}.

Moreover, it is possible to apply a batch effect removal normalization method, as described in \textit{RUVSeq} R/Bioconductor package \cite{Risso2014h}.
In particular, \gls{tic} offers to apply \textit{RUVg} and \textit{RUVs} normalization methods.
The first one, \textit{RUVg}, can be selected by setting the \lstinline!norm.type! parameter to \textit{ruvg}, which requires a list of negative controls genes.
If it's not already available from previous studies, this list can be produced by executing a first \textit{differential expression} analysis, and taking the less significative genes.

In order to facilitate this process we developed a method for creating the negative control genes list from a differential enrichment result matrix.
The function \lstinline!estimateNegativeControlGenesForRUV! takes as input the \lstinline!de.genes! and the \lstinline!counts.dataset! dataframes to extrapolate the less significative genes and to redistribute them in bins representing the mean value of the genes.
By selecting one or two genes per each bin our method is able to produce a list of negative control genes which have equal distribution for each gene counts trend.

Finally, the \lstinline!normalizeData! function offers the possibility to remove batch effects with \textit{RUVs} normalization, which is more robust to the negative controls, giving better results when their estimation is approximated.
