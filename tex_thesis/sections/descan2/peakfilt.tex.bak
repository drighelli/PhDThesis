
In order to filter out false positives peaks, we designed a method (defined in the \lstinline!finalRegions! function) which firstly filters out low score regions and then aligns the resulting regions between the samples, using two different thresholds.
One on the peaks's score and one on the number of samples.

The filtering step is designed to take as input a list of peaks as \textit{GenomicRangesList}, where each element represents a file.
This is the data structure produced by the peak caller, but, we also developed a method to load peaks produced by other software like MACS \cite{Zhang2008}, as described in section \ref{sec:descan2addfeat}.

Firstly, using the threshold on the peaks's score (defined by the \lstinline!zThreshold! parameter), the method filters out the peaks with a score lower than the user-defined threshold value.

Then, for aligning the peaks between the samples, it extends a 200bp window in both directions of remaining regions, computing the overlaps using the \lstinline!findOverlapsOfPeaks! method (using the \lstinline!connectedPeaks! parameter set as \lstinline!merge!), as defined in \textit{ChIPpeakAnno} \cite{Zhu2010} R/Bioconductor package.

Based on this idea, the filtering step is developed to filter out those peaks not present in at least a user-defined number of samples, defined by the \lstinline!minCarriers! parameter. In the light of this, the user can decide the minimum number of samples where each peak has to be detected.
On our experience, we suggest to set the samples threshold as a mutiple of the number of replicates of the conditions.

